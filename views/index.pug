html
    head 
        title Kingsland University Blockchain Project
        link(rel="stylesheet",type="text/css", href="/stylesheet.css")
        script(src='/app.js')
    body.mainBody 
       div.enjoy-css-main Kings Blockchain Project
       div.menuTop
            //form.formBox(method='GET' action='/info')
            //    button.myYellowButton(type='submit') Blockchain Information
            form.formBox1(method='GET' action='/faucet')
                button.myButton(type='submit') Faucet
            form.formBox(method='GET' action='/wallet')
                button.myButton(type='submit') Wallet
            form.formBox(method='GET' action='/blocks')
                button.myButton(type='submit') Block Explorer
            if mining_flag
             form.formBox(method='GET' action='/mining')
                button.myButton(type='submit') Mining Console
       div.SendingBlock
            div.blockHeader
              h2.containerHeaderText Blockchain Information
              form.formBoxResetChain( name='formBoxResetChain' method='get' action='/reset-chain')
                           input.myBlueButton(type='submit', value='Reset Chain')
            table.tablebox
                tbody
                    tr
                        td.itemText Chain ID
                        td.displayTextLight(style="color:maroon;") #{chainId}
                    tr
                        td.itemText Node ID
                        td.displayText #{nodeId}
                    tr
                        td.itemText Started on
                        td.displayTextLight #{startedOn}
                    tr
                    - var a = 0
                    - a = chainLength - 1
                    - link_url = "/getblock/"+ a + "/"
                        td.itemText Length
                        td.displayText 
                            a(href= link_url) #{chainLength}
                    tr
                        td.itemText Nodes connected
                        td.displayTextLight 
                          a(href="/connectednodes") #{connectedNodes}
                    tr
                        td.itemText Confirmed Transactions
                        td.displayText 
                             a(href="/confirmedtransactions") #{confirmedTransactions}
                    tr
                        td.itemText Pending Transactions
                        td.displayTextLight 
                             a(href="/pendingtransactions") #{pendingTransactionsCount}
                    tr
                        td.itemText Difficulty
                        td.displayText #{difficulty}
                    tr
                        td.itemText Nonce
                        td.displayTextLight #{nonce}
            if displayMessageChain
              if !messagetype
                .messagebox(id='messagebox',style="display:-webkit-inline-box;background:#ffb9b9;color:black;")
                    p.textMsg #{message} 
                    button.closeButton(onClick="hideMessageBox()") X
              else
                  .messagebox(id='messagebox',style="display:-webkit-inline-box")
                    p.textMsg #{message} 
                    button.closeButton(onClick="hideMessageBox()") X
       div.SendingBlock
            h2.containerHeaderText Add New Node
            form.formBox(name='formBox1' method='post' action='/nodes')
                table.tablebox
                    tbody
                        tr
                            td.itemText Host ID
                            td
                                input.myTextInput(name='hostname',
                                    id='hostname',
                                    type='text',
                                    size='30px',
                                    placeholder='localhost',
                                    value = defaultHost
                                    ) 
                        tr
                            td.itemText Port #
                            td
                                input.myTextInput(name='port',
                                    type='text',
                                    placeholder='5550',
                                    value= defaultPort

                                    ) 
                        tr
                            td(colspan="2")
                                input.myBlueButton(type='submit', value='Add Node')
            if displayMessageNode
              if !messagetype
                .messagebox(id='messagebox',style="display:-webkit-inline-box;background:#ffb9b9;color:black;")
                    p.textMsg #{message} 
                    button.closeButton(onClick="hideMessageBox()") X
              else
                  .messagebox(id='messagebox',style="display:-webkit-inline-box")
                    p.textMsg #{message} 
                    button.closeButton(onClick="hideMessageBox()") X
       script(src=browser_url || "{process.env.BROWSER_REFRESH_URL}")
    